{"version":3,"sources":["Temperature.js"],"names":["toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","BoilingVerdict","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","scaleNames","c","f","TemperatureInput","handleChange","e","_this","onTemperatureChange","target","value","this","scale","onChange","Component","Calculator","_this2","Object","E_react_tutorial_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_react_tutorial_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_react_tutorial_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleCelsiusChange","setState","handleFahrenheitChange","state"],"mappings":"6LAEA,SAASA,EAAUC,GACjB,OAA2B,GAAnBA,EAAa,IAAU,EAGjC,SAASC,EAAaC,GACpB,OAAkB,EAAVA,EAAc,EAAK,GAG7B,SAASC,EAAWC,EAAaC,GAC/B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,WAGjB,SAASC,EAAeC,GACtB,OAAIA,EAAMb,SAAW,IACZc,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,sCAGT,IAAMC,EAAa,CACjBC,EAAG,UACHC,EAAG,cAGCC,6MACJC,aAAe,SAACC,GACdC,EAAKV,MAAMW,oBAAoBF,EAAEG,OAAOC,gFAIxC,IAAMxB,EAAcyB,KAAKd,MAAMX,YACzB0B,EAAQD,KAAKd,MAAMe,MACzB,OACEd,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,sCAA8BC,EAAWW,GAAzC,KACAd,EAAAC,EAAAC,cAAA,SACEU,MAAOxB,EACP2B,SAAUF,KAAKN,uBAbMS,aAoBVC,cACnB,SAAAA,EAAYlB,GAAO,IAAAmB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMd,KAORyB,oBAAsB,SAACpC,GACrB8B,EAAKO,SAAS,CAACX,MAAO,IAAK1B,iBATV8B,EAYnBQ,uBAAyB,SAACtC,GACxB8B,EAAKO,SAAS,CAACX,MAAO,IAAK1B,iBAX3B8B,EAAKS,MAAQ,CACXvC,YAAa,GACb0B,MAAO,KAJQI,wEAiBjB,IAAMJ,EAAQD,KAAKc,MAAMb,MACnB1B,EAAcyB,KAAKc,MAAMvC,YACzBF,EAAoB,MAAV4B,EAAgB3B,EAAWC,EAAaL,GAAaK,EAC/DJ,EAAuB,MAAV8B,EAAgB3B,EAAWC,EAAaH,GAAgBG,EAE3E,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAD,CACEQ,MAAM,IACN1B,YAAaF,EACbwB,oBAAqBG,KAAKW,sBAE5BxB,EAAAC,EAAAC,cAACI,EAAD,CACEQ,MAAM,IACN1B,YAAaJ,EACb0B,oBAAqBG,KAAKa,yBAE5B1B,EAAAC,EAAAC,cAACJ,EAAD,CACEZ,QAASK,WAAWL,aApCU8B","file":"static/js/Temperature.0e526574.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nfunction toCelsius(fahrenheit) {\r\n  return (fahrenheit - 32) * 5 / 9\r\n}\r\n\r\nfunction toFahrenheit(celsius) {\r\n  return (celsius * 9 / 5) + 32\r\n}\r\n\r\nfunction tryConvert(temperature, convert) {\r\n  const input = parseFloat(temperature)\r\n  if (Number.isNaN(input)) {\r\n    return ''\r\n  }\r\n  const output = convert(input)\r\n  const rounded = Math.round(output * 1000) / 1000\r\n  return rounded.toString()\r\n}\r\n\r\nfunction BoilingVerdict(props) {\r\n  if (props.celsius >= 100) {\r\n    return <p>The water would boil.</p>\r\n  }\r\n  return <p>The water would not boil.</p>\r\n}\r\n\r\nconst scaleNames = {\r\n  c: 'Celsius',\r\n  f: 'Fahrenheit'\r\n}\r\n\r\nclass TemperatureInput extends Component {\r\n  handleChange = (e) => {\r\n    this.props.onTemperatureChange(e.target.value)\r\n  }\r\n  \r\n  render() {\r\n    const temperature = this.props.temperature\r\n    const scale = this.props.scale\r\n    return (\r\n      <fieldset>\r\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n        <input\r\n          value={temperature}\r\n          onChange={this.handleChange} />\r\n      </fieldset>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default class Calculator extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      temperature: '',\r\n      scale: 'c'\r\n    }\r\n  }\r\n\r\n  handleCelsiusChange = (temperature) => {\r\n    this.setState({scale: 'c', temperature})\r\n  }\r\n\r\n  handleFahrenheitChange = (temperature) => {\r\n    this.setState({scale: 'f', temperature})\r\n  }\r\n  \r\n  render() {\r\n    const scale = this.state.scale\r\n    const temperature = this.state.temperature\r\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature\r\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature\r\n\r\n    return (\r\n      <div>\r\n        <TemperatureInput \r\n          scale=\"c\"\r\n          temperature={celsius}\r\n          onTemperatureChange={this.handleCelsiusChange} />\r\n\r\n        <TemperatureInput \r\n          scale=\"f\"\r\n          temperature={fahrenheit}\r\n          onTemperatureChange={this.handleFahrenheitChange} />\r\n\r\n        <BoilingVerdict\r\n          celsius={parseFloat(celsius)} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}